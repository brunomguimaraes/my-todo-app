{"ast":null,"code":"import _objectSpread from \"/Users/milano/Documents/Projects/todo-xablaus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/milano/Documents/Projects/todo-xablaus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/milano/Documents/Projects/todo-xablaus/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const emptyTodo = {\n    title: \"\",\n    description: \"\"\n  };\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        todos = _React$useState2[0],\n        setTodos = _React$useState2[1];\n\n  const _React$useState3 = React.useState(emptyTodo),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        newTodo = _React$useState4[0],\n        setNewTodo = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        editing = _React$useState6[0],\n        setEditing = _React$useState6[1];\n\n  React.useEffect(() => fetch(\"http://localhost:3000/todos\").then(function (response) {\n    return response.json();\n  }).then(function (myJson) {\n    setTodos(myJson);\n  }), []);\n\n  const addEntry = todo => {\n    fetch(\"http://localhost:3000/todos\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, cors, *same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrer: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(todo) // body data type must match \"Content-Type\" header\n\n    }).then(response => response.json());\n    setNewTodo(emptyTodo);\n  };\n\n  const createOnNewTodoChange = field => {\n    return e => {\n      setNewTodo(_objectSpread({}, newTodo, {\n        [field]: e.target.value\n      }));\n    };\n  };\n\n  const deleteEntry = todoIndex => {\n    const remainingTodos = todos.filter(({\n      id\n    }) => id !== todoIndex);\n    setTodos(remainingTodos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, todos && todos.map(todo => React.createElement(\"li\", {\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, todo.title, \" / \", todo.description, React.createElement(\"button\", {\n    onClick: () => deleteEntry(todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"del\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newTodo.title,\n    onChange: createOnNewTodoChange(\"title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: newTodo.description,\n    onChange: createOnNewTodoChange(\"description\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => addEntry(newTodo),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"add\"), React.createElement(\"button\", {\n    onClick: target => console.log(\"target\", target),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"edit\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/milano/Documents/Projects/todo-xablaus/src/App.js"],"names":["React","App","emptyTodo","title","description","useState","todos","setTodos","newTodo","setNewTodo","editing","setEditing","useEffect","fetch","then","response","json","myJson","addEntry","todo","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","createOnNewTodoChange","field","e","target","value","deleteEntry","todoIndex","remainingTodos","filter","id","map","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n    const emptyTodo = {\n        title: \"\",\n        description: \"\"\n    };\n\n    const [todos, setTodos] = React.useState([]);\n    const [newTodo, setNewTodo] = React.useState(emptyTodo);\n    const [editing, setEditing] = React.useState(false);\n\n    React.useEffect(\n        () =>\n            fetch(\"http://localhost:3000/todos\")\n                .then(function(response) {\n                    return response.json();\n                })\n                .then(function(myJson) {\n                    setTodos(myJson);\n                }),\n        []\n    );\n\n    const addEntry = (todo) => {\n        fetch(\"http://localhost:3000/todos\", {\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n            mode: \"cors\", // no-cors, cors, *same-origin\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: \"same-origin\", // include, *same-origin, omit\n            headers: {\n                \"Content-Type\": \"application/json\"\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: \"follow\", // manual, *follow, error\n            referrer: \"no-referrer\", // no-referrer, *client\n            body: JSON.stringify(todo) // body data type must match \"Content-Type\" header\n        }).then((response) => response.json());\n        setNewTodo(emptyTodo);\n    };\n\n    const createOnNewTodoChange = (field) => {\n        return (e) => {\n            setNewTodo({\n                ...newTodo,\n                [field]: e.target.value\n            });\n        };\n    };\n\n    const deleteEntry = (todoIndex) => {\n        const remainingTodos = todos.filter(({ id }) => id !== todoIndex);\n        setTodos(remainingTodos);\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\" />\n            <ul>\n                {todos &&\n                    todos.map((todo) => (\n                        <li key={todo.id}>\n                            {todo.title} / {todo.description}\n                            <button onClick={() => deleteEntry(todo.id)}>\n                                del\n                            </button>\n                        </li>\n                    ))}\n            </ul>\n            <div>\n                <input\n                    value={newTodo.title}\n                    onChange={createOnNewTodoChange(\"title\")}\n                />\n                <input\n                    value={newTodo.description}\n                    onChange={createOnNewTodoChange(\"description\")}\n                />\n                <button onClick={() => addEntry(newTodo)}>add</button>\n                <button onClick={(target) => console.log(\"target\", target)}>\n                    edit\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}