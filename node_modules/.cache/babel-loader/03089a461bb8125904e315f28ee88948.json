{"ast":null,"code":"import _objectSpread from \"/Users/milano/Documents/Projects/todo-xablaus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/milano/Documents/Projects/todo-xablaus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/milano/Documents/Projects/todo-xablaus/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\"; //     console.log(data)\n\nfunction App() {\n  console.log(data);\n\n  function fakeIdGenerator() {\n    return Math.round(Math.random() * 1000000000);\n  }\n\n  const allTodos = [{\n    id: fakeIdGenerator(),\n    title: \"vai\",\n    description: \"xablau\"\n  }, {\n    id: fakeIdGenerator(),\n    title: \"toamr\",\n    description: \"xablau\"\n  }, {\n    id: fakeIdGenerator(),\n    title: \"no\",\n    description: \"xablau\"\n  }, {\n    id: fakeIdGenerator(),\n    title: \"meio\",\n    description: \"xablau\"\n  }];\n  const emptyTodo = {\n    title: \"\",\n    description: \"\"\n  };\n\n  const _React$useState = React.useState(allTodos),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        todos = _React$useState2[0],\n        setTodos = _React$useState2[1];\n\n  const _React$useState3 = React.useState(emptyTodo),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        newTodo = _React$useState4[0],\n        setNewTodo = _React$useState4[1];\n\n  const addEntry = todo => {\n    setTodos(todos.concat(_objectSpread({}, todo, {\n      id: fakeIdGenerator()\n    })));\n    setNewTodo(emptyTodo);\n  };\n\n  const createOnNewTodoChange = field => {\n    return e => {\n      setNewTodo(_objectSpread({}, newTodo, {\n        [field]: e.target.value\n      }));\n    };\n  };\n\n  const deleteEntry = todoIndex => {\n    const remainingTodos = todos.filter(({\n      id\n    }) => id !== todoIndex);\n    setTodos(remainingTodos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \" \", todos.map(todo => React.createElement(\"li\", {\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" \", todo.title, \"/ \", todo.description, \" \", React.createElement(\"button\", {\n    onClick: () => deleteEntry(todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"del \"), \" \")), \" \"), \" \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newTodo.title,\n    onChange: createOnNewTodoChange(\"title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), \" \", React.createElement(\"input\", {\n    value: newTodo.description,\n    onChange: createOnNewTodoChange(\"description\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), \" \", React.createElement(\"button\", {\n    onClick: () => addEntry(newTodo),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \" add \"), \" \"), \" \");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/milano/Documents/Projects/todo-xablaus/src/App.js"],"names":["React","App","console","log","data","fakeIdGenerator","Math","round","random","allTodos","id","title","description","emptyTodo","useState","todos","setTodos","newTodo","setNewTodo","addEntry","todo","concat","createOnNewTodoChange","field","e","target","value","deleteEntry","todoIndex","remainingTodos","filter","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\n//     console.log(data)\n\n\nfunction App() {\n    console.log(data)\n\n    function fakeIdGenerator() {\n        return Math.round(Math.random() * 1000000000);\n    }\n    const allTodos = [{\n            id: fakeIdGenerator(),\n            title: \"vai\",\n            description: \"xablau\"\n        },\n        {\n            id: fakeIdGenerator(),\n            title: \"toamr\",\n            description: \"xablau\"\n        },\n        {\n            id: fakeIdGenerator(),\n            title: \"no\",\n            description: \"xablau\"\n        },\n        {\n            id: fakeIdGenerator(),\n            title: \"meio\",\n            description: \"xablau\"\n        }\n    ];\n\n    const emptyTodo = {\n        title: \"\",\n        description: \"\"\n    };\n\n    const [todos, setTodos] = React.useState(allTodos);\n    const [newTodo, setNewTodo] = React.useState(emptyTodo);\n\n    const addEntry = (todo) => {\n        setTodos(\n            todos.concat({\n                ...todo,\n                id: fakeIdGenerator()\n            })\n        );\n\n        setNewTodo(emptyTodo);\n    };\n\n    const createOnNewTodoChange = (field) => {\n        return (e) => {\n            setNewTodo({\n                ...newTodo,\n                [field]: e.target.value\n            });\n        };\n    };\n\n    const deleteEntry = (todoIndex) => {\n        const remainingTodos = todos.filter(({\n            id\n        }) => id !== todoIndex);\n        setTodos(remainingTodos);\n    };\n\n    return ( <\n        div className = \"App\" >\n        <\n        header className = \"App-header\" / >\n        <\n        ul > {\n            todos.map((todo) => ( <\n                li key = {\n                    todo.id\n                } > {\n                    todo.title\n                }\n                / {todo.description} <\n                button onClick = {\n                    () => deleteEntry(todo.id)\n                } >\n                del <\n                /button> < /\n                li >\n            ))\n        } <\n        /ul> <\n        div >\n        <\n        input value = {\n            newTodo.title\n        }\n        onChange = {\n            createOnNewTodoChange(\"title\")\n        }\n        /> <\n        input value = {\n            newTodo.description\n        }\n        onChange = {\n            createOnNewTodoChange(\"description\")\n        }\n        /> <\n        button onClick = {\n            () => addEntry(newTodo)\n        } > add < /button> < /\n        div > <\n        /div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}