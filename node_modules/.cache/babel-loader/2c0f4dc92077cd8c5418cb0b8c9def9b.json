{"ast":null,"code":"import _objectSpread from \"/Users/milano/Documents/Projects/todo-xablaus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/milano/Documents/Projects/todo-xablaus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/milano/Documents/Projects/todo-xablaus/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nconst data = fetch(\"http://localhost:3000/todos\").then(function (response) {\n  return response.json();\n}).then(function (myJson) {\n  console.log(JSON.stringify(myJson));\n});\n\nfunction App() {\n  console.log(data.catch(data));\n\n  function fakeIdGenerator() {\n    return Math.round(Math.random() * 1000000000);\n  }\n\n  const allTodos = [{\n    id: fakeIdGenerator(),\n    title: \"vai\",\n    description: \"xablau\"\n  }, {\n    id: fakeIdGenerator(),\n    title: \"toamr\",\n    description: \"xablau\"\n  }, {\n    id: fakeIdGenerator(),\n    title: \"no\",\n    description: \"xablau\"\n  }, {\n    id: fakeIdGenerator(),\n    title: \"meio\",\n    description: \"xablau\"\n  }];\n  const emptyTodo = {\n    title: \"\",\n    description: \"\"\n  };\n\n  const _React$useState = React.useState(allTodos),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        todos = _React$useState2[0],\n        setTodos = _React$useState2[1];\n\n  const _React$useState3 = React.useState(emptyTodo),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        newTodo = _React$useState4[0],\n        setNewTodo = _React$useState4[1];\n\n  const addEntry = todo => {\n    setTodos(todos.concat(_objectSpread({}, todo, {\n      id: fakeIdGenerator()\n    })));\n    setNewTodo(emptyTodo);\n  };\n\n  const createOnNewTodoChange = field => {\n    return e => {\n      setNewTodo(_objectSpread({}, newTodo, {\n        [field]: e.target.value\n      }));\n    };\n  };\n\n  const deleteEntry = todoIndex => {\n    const remainingTodos = todos.filter(({\n      id\n    }) => id !== todoIndex);\n    setTodos(remainingTodos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, todos.map(todo => React.createElement(\"li\", {\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, todo.title, \" / \", todo.description, React.createElement(\"button\", {\n    onClick: () => deleteEntry(todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"del\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newTodo.title,\n    onChange: createOnNewTodoChange(\"title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: newTodo.description,\n    onChange: createOnNewTodoChange(\"description\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => addEntry(newTodo),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"add\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/milano/Documents/Projects/todo-xablaus/src/App.js"],"names":["React","data","fetch","then","response","json","myJson","console","log","JSON","stringify","App","catch","fakeIdGenerator","Math","round","random","allTodos","id","title","description","emptyTodo","useState","todos","setTodos","newTodo","setNewTodo","addEntry","todo","concat","createOnNewTodoChange","field","e","target","value","deleteEntry","todoIndex","remainingTodos","filter","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst data = fetch(\"http://localhost:3000/todos\")\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(myJson) {\n        console.log(JSON.stringify(myJson));\n    });\n\nfunction App() {\n    console.log(data.catch(data))\n    function fakeIdGenerator() {\n        return Math.round(Math.random() * 1000000000);\n    }\n    const allTodos = [\n        {\n            id: fakeIdGenerator(),\n            title: \"vai\",\n            description: \"xablau\"\n        },\n        {\n            id: fakeIdGenerator(),\n            title: \"toamr\",\n            description: \"xablau\"\n        },\n        {\n            id: fakeIdGenerator(),\n            title: \"no\",\n            description: \"xablau\"\n        },\n        {\n            id: fakeIdGenerator(),\n            title: \"meio\",\n            description: \"xablau\"\n        }\n    ];\n\n    const emptyTodo = {\n        title: \"\",\n        description: \"\"\n    };\n\n    const [todos, setTodos] = React.useState(allTodos);\n    const [newTodo, setNewTodo] = React.useState(emptyTodo);\n\n    const addEntry = (todo) => {\n        setTodos(\n            todos.concat({\n                ...todo,\n                id: fakeIdGenerator()\n            })\n        );\n\n        setNewTodo(emptyTodo);\n    };\n\n    const createOnNewTodoChange = (field) => {\n        return (e) => {\n            setNewTodo({\n                ...newTodo,\n                [field]: e.target.value\n            });\n        };\n    };\n\n    const deleteEntry = (todoIndex) => {\n        const remainingTodos = todos.filter(({ id }) => id !== todoIndex);\n        setTodos(remainingTodos);\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\" />\n            <ul>\n                {todos.map((todo) => (\n                    <li key={todo.id}>\n                        {todo.title} / {todo.description}\n                        <button onClick={() => deleteEntry(todo.id)}>\n                            del\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            <div>\n                <input\n                    value={newTodo.title}\n                    onChange={createOnNewTodoChange(\"title\")}\n                />\n                <input\n                    value={newTodo.description}\n                    onChange={createOnNewTodoChange(\"description\")}\n                />\n                <button onClick={() => addEntry(newTodo)}>add</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}