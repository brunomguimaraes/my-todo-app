{"ast":null,"code":"import _objectSpread from \"/Users/milano/Documents/Projects/todo-xablaus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/milano/Documents/Projects/todo-xablaus/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/milano/Documents/Projects/todo-xablaus/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const emptyTodo = {\n    title: \"\",\n    description: \"\"\n  };\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        todos = _React$useState2[0],\n        setTodos = _React$useState2[1];\n\n  const _React$useState3 = React.useState(emptyTodo),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        newTodo = _React$useState4[0],\n        setNewTodo = _React$useState4[1];\n\n  const getAllTodos = () => fetch(\"http://localhost:3000/todos\").then(function (response) {\n    return response.json();\n  }).then(function (myJson) {\n    setTodos(myJson);\n  });\n\n  const addEntry = todo => {\n    fetch(\"http://localhost:3000/todos\", {\n      mode: 'cors',\n      cache: 'no-cache',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow',\n      referrer: 'no-referrer',\n      body: JSON.stringify(todo)\n    }).then(response => response.json());\n    setNewTodo(emptyTodo);\n    getAllTodos();\n  };\n\n  const createOnNewTodoChange = field => {\n    return e => {\n      setNewTodo(_objectSpread({}, newTodo, {\n        [field]: e.target.value\n      }));\n    };\n  };\n\n  const deleteEntry = todoIndex => {\n    const remainingTodos = todos.filter(({\n      id\n    }) => id !== todoIndex);\n    setTodos(remainingTodos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, todos && todos.map(todo => React.createElement(\"li\", {\n    key: todo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, todo.title, \" / \", todo.description, React.createElement(\"button\", {\n    onClick: () => deleteEntry(todo.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"del\")))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newTodo.title,\n    onChange: createOnNewTodoChange(\"title\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    value: newTodo.description,\n    onChange: createOnNewTodoChange(\"description\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => addEntry(newTodo),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"add\"), React.createElement(\"button\", {\n    onClick: () => getAllTodos(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Get todos\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/milano/Documents/Projects/todo-xablaus/src/App.js"],"names":["React","App","emptyTodo","title","description","useState","todos","setTodos","newTodo","setNewTodo","getAllTodos","fetch","then","response","json","myJson","addEntry","todo","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","createOnNewTodoChange","field","e","target","value","deleteEntry","todoIndex","remainingTodos","filter","id","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\n\nfunction App() {\n    \n    const emptyTodo = {\n        title: \"\",\n        description: \"\"\n    };\n    \n    const [todos, setTodos] = React.useState([]);\n    const [newTodo, setNewTodo] = React.useState(emptyTodo);\n    \n    const getAllTodos = () => fetch(\"http://localhost:3000/todos\")\n    .then(function(response) {\n        return response.json();\n    })\n    .then(function(myJson) {\n        setTodos(myJson)\n    });\n    \n    const addEntry = (todo) => {\n        fetch(\"http://localhost:3000/todos\", {\n            mode: 'cors', \n            cache: 'no-cache', \n            credentials: 'same-origin', \n            headers: {\n                'Content-Type': 'application/json',\n            },\n            redirect: 'follow', \n            referrer: 'no-referrer', \n            body: JSON.stringify(todo), \n        })\n        .then(response => response.json());\n        setNewTodo(emptyTodo);\n        getAllTodos()\n    };\n        \n        const createOnNewTodoChange = (field) => {\n            return (e) => {\n                setNewTodo({\n                    ...newTodo,\n                    [field]: e.target.value\n                });\n            };\n        };\n        \n        const deleteEntry = (todoIndex) => {\n            const remainingTodos = todos.filter(({ id }) => id !== todoIndex);\n            setTodos(remainingTodos);\n        };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\" />\n            <ul>\n                {todos && todos.map((todo) => (\n                    <li key={todo.id}>\n                        {todo.title} / {todo.description}\n                        <button onClick={() => deleteEntry(todo.id)}>\n                            del\n                        </button>\n                    </li>\n                ))}\n            </ul>\n            <div>\n                <input\n                    value={newTodo.title}\n                    onChange={createOnNewTodoChange(\"title\")}\n                />\n                <input\n                    value={newTodo.description}\n                    onChange={createOnNewTodoChange(\"description\")}\n                />\n                <button onClick={() => addEntry(newTodo)}>add</button>\n                <button onClick={() => getAllTodos()}>Get todos</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}